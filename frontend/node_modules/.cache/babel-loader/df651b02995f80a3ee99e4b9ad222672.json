{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ismai\\\\OneDrive\\\\Desktop\\\\Klippa\\\\frontend\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport useFlages from '../Utils/useFlags';\nimport Exercises from './Exercises';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [expressions, answOne, answTwo, answThree, answFour, answFive] = useFlages();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    let count;\n\n    if (answOne === expressions[0].answer) {\n      count = count + 1;\n    }\n\n    if (answTwo === expressions[1].answer) {\n      count = count + 1;\n    }\n\n    if (answThree === expressions[2].answer) {\n      count = count + 1;\n    }\n\n    if (answFour === expressions[3].answer) {\n      count = count + 1;\n    }\n\n    if (answFive === expressions[4].answer) {\n      count = count + 1;\n    }\n\n    console.log(count);\n\n    if (count < 5) {\n      console.log('wrong');\n    } else {\n      console.log('Correct');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [expressions.length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Exercises, {\n          _id: expressions[0].id,\n          expression: expressions[0].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Exercises, {\n          _id: expressions[1].id,\n          expression: expressions[1].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Exercises, {\n          _id: expressions[2].id,\n          expression: expressions[2].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Exercises, {\n          _id: expressions[3].id,\n          expression: expressions[3].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Exercises, {\n          _id: expressions[4].id,\n          expression: expressions[4].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"3Ab/PyfinjIXNOn0GON4IjVYvH4=\", false, function () {\n  return [useFlages];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ismai/OneDrive/Desktop/Klippa/frontend/src/components/Home.js"],"names":["React","Button","Form","useFlages","Exercises","Home","expressions","answOne","answTwo","answThree","answFour","answFive","submitHandler","e","preventDefault","count","answer","console","log","length","id","question"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport useFlages from '../Utils/useFlags'\r\n\r\nimport Exercises from './Exercises'\r\n\r\nconst Home = () => {\r\n  const [\r\n    expressions,\r\n    answOne,\r\n    answTwo,\r\n    answThree,\r\n    answFour,\r\n    answFive,\r\n  ] = useFlages()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    let count\r\n    if (answOne === expressions[0].answer) {\r\n      count = count + 1\r\n    }\r\n    if (answTwo === expressions[1].answer) {\r\n      count = count + 1\r\n    }\r\n    if (answThree === expressions[2].answer) {\r\n      count = count + 1\r\n    }\r\n    if (answFour === expressions[3].answer) {\r\n      count = count + 1\r\n    }\r\n    if (answFive === expressions[4].answer) {\r\n      count = count + 1\r\n    }\r\n    console.log(count)\r\n    if (count < 5) {\r\n      console.log('wrong')\r\n    } else {\r\n      console.log('Correct')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={submitHandler}>\r\n        {expressions.length !== 0 && (\r\n          <>\r\n            <Exercises\r\n              _id={expressions[0].id}\r\n              expression={expressions[0].question}\r\n            />\r\n            <Exercises\r\n              _id={expressions[1].id}\r\n              expression={expressions[1].question}\r\n            />\r\n            <Exercises\r\n              _id={expressions[2].id}\r\n              expression={expressions[2].question}\r\n            />\r\n            <Exercises\r\n              _id={expressions[3].id}\r\n              expression={expressions[3].question}\r\n            />\r\n            <Exercises\r\n              _id={expressions[4].id}\r\n              expression={expressions[4].question}\r\n            />\r\n          </>\r\n        )}\r\n        <Button variant='info' type='submit'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}