{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useContext } from 'react';\nimport { GlobalContext } from './GlobalContext';\n\nconst useFetch = () => {\n  _s();\n\n  const {\n    expressions,\n    setExpressions\n  } = useContext(GlobalContext);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await axios.get('/api/expression');\n      localStorage.setItem('qInfo', JSON.stringify(data));\n      setExpressions(data);\n    };\n\n    fetchData();\n  }, [setExpressions]);\n  return [expressions];\n};\n\n_s(useFetch, \"Vf6qijQyLzHFhMEPVkfxGalLyXE=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/ismai/OneDrive/Desktop/Klippa/frontend/src/hooks/useFetch.js"],"names":["axios","useEffect","useContext","GlobalContext","useFetch","expressions","setExpressions","fetchData","data","get","localStorage","setItem","JSON","stringify"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAkCJ,UAAU,CAACC,aAAD,CAAlD;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAG,YAAY;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,KAAK,CAACS,GAAN,CAAU,iBAAV,CAAvB;AAEAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA9B;AACAF,MAAAA,cAAc,CAACE,IAAD,CAAd;AACD,KALD;;AAMAD,IAAAA,SAAS;AACV,GARQ,EAQN,CAACD,cAAD,CARM,CAAT;AAUA,SAAO,CAACD,WAAD,CAAP;AACD,CAdD;;GAAMD,Q;;AAgBN,eAAeA,QAAf","sourcesContent":["import axios from 'axios'\r\nimport { useEffect, useContext } from 'react'\r\nimport { GlobalContext } from './GlobalContext'\r\n\r\nconst useFetch = () => {\r\n  const { expressions, setExpressions } = useContext(GlobalContext)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await axios.get('/api/expression')\r\n\r\n      localStorage.setItem('qInfo', JSON.stringify(data))\r\n      setExpressions(data)\r\n    }\r\n    fetchData()\r\n  }, [setExpressions])\r\n\r\n  return [expressions]\r\n}\r\n\r\nexport default useFetch\r\n"]},"metadata":{},"sourceType":"module"}