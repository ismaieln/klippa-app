{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ismaiel\\\\Desktop\\\\Klippa\\\\frontend\\\\src\\\\components\\\\Play.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { GlobalContext } from '../hooks/GlobalContext';\nimport { PlayCountContext } from '../hooks/PlayCountContext';\nimport fetchQuestions from '../Utils/fetchQuestions';\nimport Exercises from './Exercises';\nimport Loader from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Play = ({\n  history\n}) => {\n  _s();\n\n  const {\n    total,\n    success,\n    fail,\n    setFlag,\n    setFail\n  } = useContext(PlayCountContext);\n  const {\n    first,\n    setFirst,\n    second,\n    setSecond,\n    third,\n    setThird,\n    fourth,\n    setFourth,\n    fifth,\n    setFifth,\n    loading,\n    setLoading,\n    expressions,\n    setExpressions,\n    user,\n    setUser\n  } = useContext(GlobalContext);\n  const inState = [first, second, third, fourth, fifth];\n  localStorage.setItem('answers', JSON.stringify(inState));\n  const playInfo = [total, success, fail];\n  localStorage.setItem('playHistory', JSON.stringify(playInfo));\n\n  if (fail > 2) {\n    history.push('./StopPlay');\n  }\n\n  if (!user) {\n    const userInfo = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n    setUser(userInfo);\n    history.push('/');\n  }\n\n  const getQuestions = async () => {\n    const q = await fetchQuestions();\n    setExpressions(q);\n    setFirst('');\n    setSecond('');\n    setThird('');\n    setFourth('');\n    setFifth('');\n    setFail(0);\n  };\n\n  const confirmHandler = e => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (first === expressions[0].answer && second === expressions[1].answer && third === expressions[2].answer && fourth === expressions[3].answer && fifth === expressions[4].answer) {\n      setFlag(true);\n    } else {\n      setFlag(false);\n    }\n\n    setLoading(false);\n    history.push('/result');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [user && /*#__PURE__*/_jsxDEV(Row, {\n      className: \"p-1 text-info\",\n      children: [\"Welcome \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }, this), user && /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            className: \"sbga\",\n            onClick: getQuestions,\n            children: \"Get New Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), expressions.length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-3 justify-content-between mx-auto text-info\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            as: \"h4\",\n            md: 4,\n            xs: 5,\n            className: \"text-center\",\n            children: \"Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            lg: 2,\n            md: 2,\n            xs: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            as: \"h4\",\n            md: 6,\n            xs: 5,\n            className: \"text-center\",\n            children: \"Answers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), expressions.map(item => /*#__PURE__*/_jsxDEV(Exercises, {\n          id: expressions.indexOf(item),\n          expression: item.question,\n          inState: inState\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"px-3 justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            as: \"button\",\n            type: \"submit\",\n            md: 4,\n            onClick: confirmHandler,\n            className: \"sbg mb-5\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"text-info\",\n              children: \"Check The Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Play, \"fS1o1wPIKVH1SvNgjmgM8QbyKI4=\");\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["C:/Users/ismaiel/Desktop/Klippa/frontend/src/components/Play.js"],"names":["React","useContext","Button","Col","Container","Row","GlobalContext","PlayCountContext","fetchQuestions","Exercises","Loader","Play","history","total","success","fail","setFlag","setFail","first","setFirst","second","setSecond","third","setThird","fourth","setFourth","fifth","setFifth","loading","setLoading","expressions","setExpressions","user","setUser","inState","localStorage","setItem","JSON","stringify","playInfo","push","userInfo","getItem","parse","getQuestions","q","confirmHandler","e","preventDefault","answer","name","length","map","item","indexOf","question","_id"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Button, Col, Container, Row } from 'react-bootstrap'\r\nimport { GlobalContext } from '../hooks/GlobalContext'\r\nimport { PlayCountContext } from '../hooks/PlayCountContext'\r\nimport fetchQuestions from '../Utils/fetchQuestions'\r\n\r\nimport Exercises from './Exercises'\r\nimport Loader from './Loader'\r\n\r\n\r\nconst Play = ({ history }) => {\r\n    const { total, success, fail, setFlag, setFail, } = useContext(PlayCountContext)\r\n\r\n    const {\r\n        first,\r\n        setFirst,\r\n        second,\r\n        setSecond,\r\n        third,\r\n        setThird,\r\n        fourth,\r\n        setFourth,\r\n        fifth,\r\n        setFifth,\r\n        loading,\r\n        setLoading,\r\n        expressions,\r\n        setExpressions,\r\n        user,\r\n        setUser,\r\n    } = useContext(GlobalContext)\r\n\r\n    const inState = [first, second, third, fourth, fifth]\r\n\r\n    localStorage.setItem('answers', JSON.stringify(inState))\r\n\r\n    const playInfo = [total, success, fail]\r\n\r\n    localStorage.setItem('playHistory', JSON.stringify(playInfo))\r\n\r\nif(fail >2){\r\n    history.push('./StopPlay')\r\n}\r\n\r\n    if (!user) {\r\n        const userInfo = localStorage.getItem('userInfo')\r\n            ? JSON.parse(localStorage.getItem('userInfo'))\r\n            : null\r\n        setUser(userInfo)\r\n        history.push('/')\r\n    }\r\n\r\n    const getQuestions = async () => {\r\n        const q = await fetchQuestions()\r\n        setExpressions(q)\r\n        setFirst('')\r\n        setSecond('')\r\n        setThird('')\r\n        setFourth('')\r\n        setFifth('')\r\n        setFail(0)\r\n    }\r\n\r\n    const confirmHandler = (e) => {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        if (\r\n            first === expressions[0].answer &&\r\n            second === expressions[1].answer &&\r\n            third === expressions[2].answer &&\r\n            fourth === expressions[3].answer &&\r\n            fifth === expressions[4].answer\r\n        ) {\r\n            setFlag(true)\r\n        } else {\r\n            setFlag(false)\r\n        }\r\n        setLoading(false)\r\n        history.push('/result')\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {user &&\r\n                <Row className='p-1 text-info'>\r\n                    Welcome {user.name}\r\n                </Row>}\r\n            {/* {playCount > 2 && <StopPlay />} */}\r\n            {loading && <Loader />}\r\n            {user && (\r\n                <Container>\r\n                    <Row>\r\n                        \r\n                        <Col className='text-center'>\r\n                            <Button\r\n                                variant='info'\r\n                                className='sbga'\r\n                                onClick={getQuestions}\r\n                            >Get New Questions\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {expressions.length !== 0 && (\r\n                        <>\r\n                            <Row className='my-3 justify-content-between mx-auto text-info'>\r\n                                <Col as='h4' md={4} xs={5} className='text-center'>Questions</Col>\r\n                                <Col lg={2} md={2} xs={1}></Col>\r\n                                <Col as='h4' md={6} xs={5} className='text-center'>Answers</Col>\r\n                            </Row>\r\n                            {expressions.map((item) => (\r\n                                <Exercises\r\n                                    key={item._id}\r\n                                    id={expressions.indexOf(item)}\r\n                                    expression={item.question}\r\n                                    inState={inState}\r\n                                />\r\n                            ))}\r\n                            <Row className='px-3 justify-content-center'>\r\n                                <Col\r\n                                    as='button'\r\n                                    type='submit'\r\n                                    md={4}\r\n                                    onClick={confirmHandler}\r\n                                    className='sbg mb-5'\r\n                                >\r\n                                    <strong className='text-info'>Check The Result</strong>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n                </Container>\r\n            )}\r\n        </Container>)\r\n}\r\nexport default Play"]},"metadata":{},"sourceType":"module"}