{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFlags = _id => {\n  _s();\n\n  const [expressions, setExpressions] = useState([]);\n  const [answOne, setAnswOne] = useState();\n  const [answTwo, setAnswTwo] = useState();\n  const [answThree, setAnswThree] = useState();\n  const [answFour, setAnswFour] = useState();\n  const [answFive, setAnswFive] = useState();\n\n  let valueTyped = e => {\n    switch (_id) {\n      case '0':\n        setAnswOne(e.target.value);\n        break;\n\n      case '1':\n        setAnswTwo(e.target.value);\n        break;\n\n      case '2':\n        setAnswThree(e.target.value);\n        break;\n\n      case '3':\n        setAnswFour(e.target.value);\n        break;\n\n      case '4':\n        setAnswFive(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await axios.get('/api/guess');\n      setExpressions(data);\n    };\n\n    fetchData();\n  }, []);\n  return [expressions, answOne, answTwo, answThree, answFour, answFive];\n};\n\n_s(useFlags, \"198K+RVLHqhHxWQdU2Gr2qr8Fkw=\");\n\nexport default useFlags;","map":{"version":3,"sources":["C:/Users/ismai/OneDrive/Desktop/Klippa/frontend/src/Utils/useFlags.js"],"names":["useState","useEffect","axios","useFlags","_id","expressions","setExpressions","answOne","setAnswOne","answTwo","setAnswTwo","answThree","setAnswThree","answFour","setAnswFour","answFive","setAnswFive","valueTyped","e","target","value","fetchData","data","get"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,EAA1C;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,EAAxC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,EAAxC;;AAEA,MAAIiB,UAAU,GAAIC,CAAD,IAAO;AACtB,YAAQd,GAAR;AACE,WAAK,GAAL;AACEI,QAAAA,UAAU,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACA;;AACF,WAAK,GAAL;AACEV,QAAAA,UAAU,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACA;;AACF,WAAK,GAAL;AACER,QAAAA,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACA;;AACF,WAAK,GAAL;AACEN,QAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACA;;AACF,WAAK,GAAL;AACEJ,QAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACA;;AACF;AACE;AAjBJ;AAmBD,GApBD;;AAsBAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,SAAS,GAAG,YAAY;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMpB,KAAK,CAACqB,GAAN,CAAU,YAAV,CAAvB;AACAjB,MAAAA,cAAc,CAACgB,IAAD,CAAd;AACD,KAHD;;AAIAD,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;AAQA,SAAO,CAAChB,WAAD,EAAcE,OAAd,EAAuBE,OAAvB,EAAgCE,SAAhC,EAA2CE,QAA3C,EAAqDE,QAArD,CAAP;AACD,CAvCD;;GAAMZ,Q;;AAyCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst useFlags = (_id) => {\r\n  const [expressions, setExpressions] = useState([])\r\n  const [answOne, setAnswOne] = useState()\r\n  const [answTwo, setAnswTwo] = useState()\r\n  const [answThree, setAnswThree] = useState()\r\n  const [answFour, setAnswFour] = useState()\r\n  const [answFive, setAnswFive] = useState()\r\n\r\n  let valueTyped = (e) => {\r\n    switch (_id) {\r\n      case '0':\r\n        setAnswOne(e.target.value)\r\n        break\r\n      case '1':\r\n        setAnswTwo(e.target.value)\r\n        break\r\n      case '2':\r\n        setAnswThree(e.target.value)\r\n        break\r\n      case '3':\r\n        setAnswFour(e.target.value)\r\n        break\r\n      case '4':\r\n        setAnswFive(e.target.value)\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await axios.get('/api/guess')\r\n      setExpressions(data)\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  return [expressions, answOne, answTwo, answThree, answFour, answFive]\r\n}\r\n\r\nexport default useFlags\r\n"]},"metadata":{},"sourceType":"module"}