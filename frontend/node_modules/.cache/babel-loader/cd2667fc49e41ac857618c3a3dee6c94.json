{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport PlayCountProvider from '../hooks/PlayCountContext';\n\nconst storeWrong = states => {\n  _s();\n\n  const {\n    total,\n    setTotal,\n    success,\n    setSuccess,\n    fail,\n    setFail\n  } = useContext(PlayCountProvider);\n  const questionsFromStorage = localStorage.getItem('qInfo') ? JSON.parse(localStorage.getItem('qInfo')) : [];\n\n  for (let i = 0; i < 5; i++) {\n    if (questionsFromStorage[i].answer === states[i]) {\n      console.log(`Answer # ${i} is correct`);\n    } else {\n      console.log(`Answer # ${i} is wrong`);\n    }\n  }\n\n  return false;\n};\n\n_s(storeWrong, \"SGDDxNx+aFkmKhzDOWILSAh1+Yg=\");\n\nexport default storeWrong;","map":{"version":3,"sources":["C:/Users/ismai/OneDrive/Desktop/Klippa/frontend/src/Utils/storeWrong.js"],"names":["useContext","PlayCountProvider","storeWrong","states","total","setTotal","success","setSuccess","fail","setFail","questionsFromStorage","localStorage","getItem","JSON","parse","i","answer","console","log"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;AAEA,MAAMC,UAAU,GAAIC,MAAD,IAAY;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA,UAA5B;AAAwCC,IAAAA,IAAxC;AAA8CC,IAAAA;AAA9C,MACJT,UAAU,CAACC,iBAAD,CADZ;AAEA,QAAMS,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CADyB,GAEzB,EAFJ;;AAGA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,QAAIL,oBAAoB,CAACK,CAAD,CAApB,CAAwBC,MAAxB,KAAmCb,MAAM,CAACY,CAAD,CAA7C,EAAkD;AAChDE,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAWH,CAAE,aAA1B;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAWH,CAAE,WAA1B;AACD;AACF;;AAED,SAAO,KAAP;AACD,CAfD;;GAAMb,U;;AAiBN,eAAeA,UAAf","sourcesContent":["import { useContext } from 'react'\r\nimport PlayCountProvider from '../hooks/PlayCountContext'\r\n\r\nconst storeWrong = (states) => {\r\n  const { total, setTotal, success, setSuccess, fail, setFail } =\r\n    useContext(PlayCountProvider)\r\n  const questionsFromStorage = localStorage.getItem('qInfo')\r\n    ? JSON.parse(localStorage.getItem('qInfo'))\r\n    : []\r\n  for (let i = 0; i < 5; i++) {\r\n    if (questionsFromStorage[i].answer === states[i]) {\r\n      console.log(`Answer # ${i} is correct`)\r\n    } else {\r\n      console.log(`Answer # ${i} is wrong`)\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nexport default storeWrong\r\n"]},"metadata":{},"sourceType":"module"}